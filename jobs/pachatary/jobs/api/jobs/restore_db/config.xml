<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>eval &quot;$(cat $pachatary_db_env_list)&quot; 
sudo aws s3 cp s3://pachatary-db/latest.dump latest.dump --profile pachatary
sudo docker run --rm -v $PWD:/src -v pachatary-pgdata:/dest -w /src alpine cp latest.dump /dest
sudo docker exec -t pachatary-postgres psql -U postgres -c &quot;SELECT pid, pg_terminate_backend(pid) FROM pg_stat_activity WHERE datname = &apos;$PACHATARY_DB&apos; AND pid &lt;&gt; pg_backend_pid();&quot;
sudo docker exec -t pachatary-postgres psql -U postgres -c &quot;drop database $PACHATARY_DB&quot;
sudo docker exec -t pachatary-postgres psql -U postgres -c &quot;create database $PACHATARY_DB with owner $PACHATARY_DB_ROLE&quot;
sudo docker exec -t pachatary-postgres bash -c &quot;psql -U $PACHATARY_DB_ROLE -d $PACHATARY_DB &lt; /var/lib/postgresql/data/latest.dump&quot;</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper plugin="credentials-binding@1.23">
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.FileBinding>
          <credentialsId>pachatary_db_env_list</credentialsId>
          <variable>pachatary_db_env_list</variable>
        </org.jenkinsci.plugins.credentialsbinding.impl.FileBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>